{"ast":null,"code":"var _jsxFileName = \"/Users/bpozniak/Desktop/UNIT3/project3/Project3_Calendar_FrontEnd/calendar/src/DayPicker/index.js\";\nimport React from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport ReactModal from 'react-modal';\nimport Day from '../Day/index'; // import DayPickerInput from 'react-day-picker/DayPickerInput';\n// import { DateUtils } from 'react-day-picker';\n// import dateFnsFormat from 'date-fns/format';\n// import dateFnsParse from 'date-fns/parse';\n// function parseDate(str, format, locale) {\n//   const parsed = dateFnsParse(str, format, new Date(), { locale });\n//   if (DateUtils.isDate(parsed)) {\n//     return parsed;\n//   }\n//   return undefined;\n// }\n// function formatDate(date, format, locale) {\n//   return dateFnsFormat(date, format, { locale });\n// }\n// const FORMAT = 'MM/dd/yyyy';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      selectedDay: undefined,\n      showModal: false\n    };\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  handleDayClick(day) {\n    this.setState({\n      selectedDay: day //  dateSelected: day,\n\n    });\n    this.handleOpenModal();\n    console.log('handleClick day: ', day); // this.props.onDayClick1 && this.props.onDayClick1(e, day);\n  }\n\n  handleOpenModal(day) {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  render() {\n    console.log('inside render: ', this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DayPicker, {\n          onDayClick: this.handleDayClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), this.state.selectedDay ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You clicked \", this.state.selectedDay.toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please select a day above!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ReactModal, {\n          isOpen: this.state.showModal,\n          children: [/*#__PURE__*/_jsxDEV(Day, {\n            dateSelected: this.state.selectedDay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleCloseModal,\n            children: \"Close Modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n} //   <Day selectedDay={this.selectedDay} />","map":{"version":3,"sources":["/Users/bpozniak/Desktop/UNIT3/project3/Project3_Calendar_FrontEnd/calendar/src/DayPicker/index.js"],"names":["React","DayPicker","ReactModal","Day","Calendar","Component","constructor","props","handleDayClick","bind","state","selectedDay","undefined","showModal","handleOpenModal","handleCloseModal","day","setState","console","log","render","toLocaleDateString"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAO,gCAAP;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CAGA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AAKA,eAAe,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAEC,SADF;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAKA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBL,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKM,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBN,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAMDD,EAAAA,cAAc,CAACQ,GAAD,EAAM;AAClB,SAAKC,QAAL,CAAc;AACZN,MAAAA,WAAW,EAAEK,GADD,CAEd;;AAFc,KAAd;AAKA,SAAKF,eAAL;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCH,GAAhC,EAPkB,CASnB;AAEA;;AAEDF,EAAAA,eAAe,CAAEE,GAAF,EAAO;AACpB,SAAKC,QAAL,CAAc;AAACJ,MAAAA,SAAS,EAAE;AAAZ,KAAd;AAED;;AAGDE,EAAAA,gBAAgB,GAAI;AAClB,SAAKE,QAAL,CAAc;AAAEJ,MAAAA,SAAS,EAAE;AAAb,KAAd;AACD;;AAGDO,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKT,KAApC;AAGA,wBACE;AAAA,8BACG;AAAA,gCACD,QAAC,SAAD;AAAW,UAAA,UAAU,EAAE,KAAKF;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADC,EAGE,KAAKE,KAAL,CAAWC,WAAX,gBACC;AAAA,qCAAgB,KAAKD,KAAL,CAAWC,WAAX,CAAuBU,kBAAvB,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANH;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAWG;AAAA,+BACC,QAAC,UAAD;AACE,UAAA,MAAM,EAAE,KAAKX,KAAL,CAAWG,SADrB;AAAA,kCAIE,QAAC,GAAD;AAAK,YAAA,YAAY,EAAE,KAAKH,KAAL,CAAWC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAJF,eAME;AAAQ,YAAA,OAAO,EAAE,KAAKI,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAXH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AA3EmD,C,CAoF9C","sourcesContent":["\nimport React from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport ReactModal from 'react-modal';\nimport Day from '../Day/index' \n\n\n// import DayPickerInput from 'react-day-picker/DayPickerInput';\n// import { DateUtils } from 'react-day-picker';\n// import dateFnsFormat from 'date-fns/format';\n// import dateFnsParse from 'date-fns/parse';\n\n\n\n\n// function parseDate(str, format, locale) {\n//   const parsed = dateFnsParse(str, format, new Date(), { locale });\n//   if (DateUtils.isDate(parsed)) {\n//     return parsed;\n//   }\n//   return undefined;\n// }\n\n// function formatDate(date, format, locale) {\n//   return dateFnsFormat(date, format, { locale });\n// }\n\n// const FORMAT = 'MM/dd/yyyy';\n\n\n\n\nexport default class Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    \n    this.state = {\n      selectedDay: undefined,\n      showModal: false,\n\n    };\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n\n\n \n\n  handleDayClick(day) {\n    this.setState({ \n      selectedDay: day,\n    //  dateSelected: day,\n       \n    });\n    this.handleOpenModal();\n    console.log('handleClick day: ',day)\n    \n   // this.props.onDayClick1 && this.props.onDayClick1(e, day);\n   \n  }\n\n  handleOpenModal (day) {\n    this.setState({showModal: true });\n    \n  }\n\n\n  handleCloseModal () {\n    this.setState({ showModal: false }); \n  }\n  \n\n  render() {\n    console.log('inside render: ', this.state)\n    \n\n    return (\n      <div>\n         <div>\n        <DayPicker onDayClick={this.handleDayClick}  />\n\n          {this.state.selectedDay ? (\n            <p>You clicked {this.state.selectedDay.toLocaleDateString()}</p>\n          ) : (\n            <p>Please select a day above!</p>\n          )}\n        </div>\n            \n         <div>\n          <ReactModal \n            isOpen={this.state.showModal} \n            >\n           \n            <Day dateSelected={this.state.selectedDay}/>\n          \n            <button onClick={this.handleCloseModal}>Close Modal</button>\n          </ReactModal>\n         </div>\n\n         \n\n\n\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n        //   <Day selectedDay={this.selectedDay} />"]},"metadata":{},"sourceType":"module"}